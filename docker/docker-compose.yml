version: '3.8'

services:
  db:
    image: pgvector/pgvector:pg16
    container_name: rag-factory-db
    environment:
      - POSTGRES_DB=rag_factory_db
      - POSTGRES_USER=user
      - POSTGRES_PASSWORD=password
    volumes:
      - pgdata:/var/lib/postgresql/data
    ports:
      - "5433:5432"
    restart: unless-stopped

  ollama:
    image: ollama/ollama
    container_name: ollama
    volumes:
      - ollama_data:/root/.ollama
    ports:
      - "11434:11434"
    restart: unless-stopped

  redis:
    image: redis:7-alpine
    container_name: rag-factory-redis
    ports:
      - "6380:6379"
    volumes:
      - redis_data:/data
    restart: unless-stopped
    command: redis-server --appendonly yes

  backend:
    build:
      context: ../backend
      dockerfile: Dockerfile
    container_name: backend
    # Run as a module to ensure correct package resolution within the container
    command: ["python", "-m", "core.main"]
    depends_on:
      - db
      - ollama
      - redis
    environment:
      - DATABASE_URL=postgresql://user:password@db:5432/rag_factory_db
      - OLLAMA_HOST=ollama
      - REDIS_URL=redis://redis:6379/0
    restart: unless-stopped

  worker:
    build:
      context: ../backend
      dockerfile: Dockerfile
    container_name: rag-worker
    command: ["python", "-m", "rq.cli", "worker", "--url", "redis://redis:6379/0", "--worker-ttl", "360", "rag-tasks"]
    depends_on:
      - db
      - redis
      - ollama
    environment:
      - DATABASE_URL=postgresql://user:password@db:5432/rag_factory_db
      - OLLAMA_HOST=ollama
      - REDIS_URL=redis://redis:6379/0
      - PYTHONPATH=/app
    restart: unless-stopped

  api:
    build:
      context: ../backend
      dockerfile: Dockerfile
    container_name: api
    command: python run_api.py
    depends_on:
      - db
      - ollama
      - redis
    ports:
      - "8000:8000"
    environment:
      - DATABASE_URL=postgresql://user:password@db:5432/rag_factory_db
      - OLLAMA_HOST=ollama
      - REDIS_URL=redis://redis:6379/0
      - PYTHONPATH=/app
    restart: unless-stopped

  frontend:
    build:
      context: ../frontend
      dockerfile: Dockerfile
    container_name: frontend
    ports:
      - "3000:3000"
    depends_on:
      - api
    restart: unless-stopped

volumes:
  pgdata:
  ollama_data:
  redis_data: